openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Google Cloud Memorystore for Memcached API is used for creating and
    managing Memcached instances in GCP.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Memorystore for Memcached API
  version: v1beta2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://memcache.googleapis.com/$discovery/rest?version=v1beta2
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: memcache
externalDocs:
  url: https://cloud.google.com/memorystore/
servers:
- url: https://memcache.googleapis.com/
tags:
- name: projects
paths:
  /v1beta2/{instance}:applySoftwareUpdate:
    post:
      description: Updates software on the selected nodes of the Instance.
      operationId: memcache.projects.locations.instances.applySoftwareUpdate
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. Resource name of the Memcached instance for which software
          update should be applied.
        explode: false
        in: path
        name: instance
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplySoftwareUpdateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta2/{instance}:rescheduleMaintenance:
    post:
      description: Performs the apply phase of the RescheduleMaintenance verb.
      operationId: memcache.projects.locations.instances.rescheduleMaintenance
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Memcache instance resource name using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\
          \ where `location_id` refers to a GCP region."
        explode: false
        in: path
        name: instance
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RescheduleMaintenanceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta2/{name}:
    delete:
      description: "Deletes a long-running operation. This method indicates that the\
        \ client is no longer interested in the operation result. It does not cancel\
        \ the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
      operationId: memcache.projects.locations.operations.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be deleted.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    get:
      description: Gets the latest state of a long-running operation. Clients can
        use this method to poll the operation result at intervals as recommended by
        the API service.
      operationId: memcache.projects.locations.operations.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    patch:
      description: Updates an existing Instance in a given project and location.
      operationId: memcache.projects.locations.instances.patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Unique name of the resource in this scope including\
          \ project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\
          \ Note: Memcached instances are managed and addressed at the regional level\
          \ so `location_id` here refers to a Google Cloud region; however, users\
          \ may choose which zones Memcached nodes should be provisioned in within\
          \ an instance. Refer to zones field for more details."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Required. Mask of fields to update. * `displayName`
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Instance"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta2/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: memcache.projects.locations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The resource that owns the locations collection, if applicable."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "A filter to narrow down results to a preferred subset. The filtering\
          \ language accepts strings like `\"displayName=tokyo\"`, and is documented\
          \ in more detail in [AIP-160](https://google.aip.dev/160)."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of results to return. If not set, the service\
          \ selects a default."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: A page token received from the `next_page_token` field in the
          response. Send that page token to receive the subsequent page.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1beta2/{name}/operations:
    get:
      description: "Lists operations that match the specified filter in the request.\
        \ If the server doesn't support this method, it returns `UNIMPLEMENTED`."
      operationId: memcache.projects.locations.operations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation's parent resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The standard list filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The standard list page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: The standard list page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1beta2/{name}:applyParameters:
    post:
      description: '`ApplyParameters` restarts the set of specified nodes in order
        to update them to the current set of parameters for the Memcached Instance.'
      operationId: memcache.projects.locations.instances.applyParameters
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. Resource name of the Memcached instance for which parameter
          group updates should be applied.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplyParametersRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta2/{name}:cancel:
    post:
      description: "Starts asynchronous cancellation on a long-running operation.\
        \ The server makes a best effort to cancel the operation, but success is not\
        \ guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.\
        \ Clients can use Operations.GetOperation or other methods to check whether\
        \ the cancellation succeeded or whether the operation completed despite cancellation.\
        \ On successful cancellation, the operation is not deleted; instead, it becomes\
        \ an operation with an Operation.error value with a google.rpc.Status.code\
        \ of 1, corresponding to `Code.CANCELLED`."
      operationId: memcache.projects.locations.operations.cancel
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be cancelled.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta2/{name}:updateParameters:
    patch:
      description: "Updates the defined Memcached parameters for an existing instance.\
        \ This method only stages the parameters, it must be followed by `ApplyParameters`\
        \ to apply the parameters to nodes of the Memcached instance."
      operationId: memcache.projects.locations.instances.updateParameters
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Required. Resource name of the Memcached instance for which the
          parameters should be updated.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateParametersRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta2/{name}:upgrade:
    post:
      description: Upgrades the Memcache instance to a newer memcached engine version
        specified in the request.
      operationId: memcache.projects.locations.instances.upgrade
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. Memcache instance resource name using the form: `projects/{project}/locations/{location}/instances/{instance}`\
          \ where `location_id` refers to a GCP region."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudMemcacheV1beta2UpgradeInstanceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1beta2/{parent}/instances:
    get:
      description: Lists Instances in a given location.
      operationId: memcache.projects.locations.instances.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The resource name of the instance location using the\
          \ form: `projects/{project_id}/locations/{location_id}` where `location_id`\
          \ refers to a GCP region"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "List filter. For example, exclude all Memcached instances with\
          \ name as my-instance by specifying `\"name != my-instance\"`."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "Sort results. Supported values are \"name\", \"name desc\" or\
          \ \"\" (unsorted)."
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum number of items to return. If not specified, a default\
          \ value of 1000 will be used by the service. Regardless of the `page_size`\
          \ value, the response may include a partial list and a caller should only\
          \ rely on response's `next_page_token` to determine if there are more instances\
          \ left to be queried."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The `next_page_token` value returned from a previous List request,\
          \ if any."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInstancesResponse"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
    post:
      description: Creates a new Instance in a given location.
      operationId: memcache.projects.locations.instances.create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The resource name of the instance location using the\
          \ form: `projects/{project_id}/locations/{location_id}` where `location_id`\
          \ refers to a GCP region"
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      - description: "Required. The logical name of the Memcached instance in the\
          \ user project with the following restrictions: * Must contain only lowercase\
          \ letters, numbers, and hyphens. * Must start with a letter. * Must be between\
          \ 1-40 characters. * Must end with a number or a letter. * Must be unique\
          \ within the user project / location. If any of the above are not met, the\
          \ API raises an invalid argument error."
        explode: true
        in: query
        name: instanceId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Instance"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    ApplyParametersRequest:
      description: Request for ApplyParameters.
      example:
        nodeIds:
        - nodeIds
        - nodeIds
        applyAll: true
      properties:
        applyAll:
          description: "Whether to apply instance-level parameter group to all nodes.\
            \ If set to true, users are restricted from specifying individual nodes,\
            \ and `ApplyParameters` updates all nodes within the instance."
          type: boolean
        nodeIds:
          description: Nodes to which the instance-level parameter group is applied.
          items:
            type: string
          type: array
      type: object
    ApplySoftwareUpdateRequest:
      description: Request for ApplySoftwareUpdate.
      example:
        nodeIds:
        - nodeIds
        - nodeIds
        applyAll: true
      properties:
        applyAll:
          description: "Whether to apply the update to all nodes. If set to true,\
            \ will explicitly restrict users from specifying any nodes, and apply\
            \ software update to all nodes (where applicable) within the instance."
          type: boolean
        nodeIds:
          description: Nodes to which we should apply the update to. Note all the
            selected nodes are updated in parallel.
          items:
            type: string
          type: array
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    DailyCycle:
      description: Time window specified for daily operations.
      properties:
        duration:
          description: "Output only. Duration of the time window, set by service producer."
          format: google-duration
          type: string
        startTime:
          $ref: "#/components/schemas/TimeOfDay"
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday.\
        \ The time of day and time zone are either specified elsewhere or are insignificant.\
        \ The date is relative to the Gregorian Calendar. This can represent one of\
        \ the following: * A full date, with non-zero year, month, and day values.\
        \ * A month and day, with a zero year (for example, an anniversary). * A year\
        \ on its own, with a zero month and a zero day. * A year and month, with a\
        \ zero day (for example, a credit card expiration date). Related types: *\
        \ google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: "Day of a month. Must be from 1 to 31 and valid for the year\
            \ and month, or 0 to specify a year by itself or a year and month where\
            \ the day isn't significant."
          format: int32
          type: integer
        month:
          description: "Month of a year. Must be from 1 to 12, or 0 to specify a year\
            \ without a month and day."
          format: int32
          type: integer
        year:
          description: "Year of the date. Must be from 1 to 9999, or 0 to specify\
            \ a date without a year."
          format: int32
          type: integer
      type: object
    DenyMaintenancePeriod:
      description: DenyMaintenancePeriod definition. Maintenance is forbidden within
        the deny period. The start_date must be less than the end_date.
      properties:
        endDate:
          $ref: "#/components/schemas/Date"
        startDate:
          $ref: "#/components/schemas/Date"
        time:
          $ref: "#/components/schemas/TimeOfDay"
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleCloudMemcacheV1beta2LocationMetadata:
      description: Metadata for the given google.cloud.location.Location.
      properties:
        availableZones:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudMemcacheV1beta2ZoneMetadata"
          description: "Output only. The set of available zones in the location. The\
            \ map is keyed by the lowercase ID of each zone, as defined by GCE. These\
            \ keys can be specified in the `zones` field when creating a Memcached\
            \ instance."
          readOnly: true
          type: object
      type: object
    GoogleCloudMemcacheV1beta2MaintenancePolicy:
      description: Maintenance policy per instance.
      example:
        createTime: createTime
        description: description
        weeklyMaintenanceWindow:
        - duration: duration
          startTime:
            hours: 0
            seconds: 5
            nanos: 1
            minutes: 6
          day: DAY_OF_WEEK_UNSPECIFIED
        - duration: duration
          startTime:
            hours: 0
            seconds: 5
            nanos: 1
            minutes: 6
          day: DAY_OF_WEEK_UNSPECIFIED
        updateTime: updateTime
      properties:
        createTime:
          description: Output only. The time when the policy was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of what this policy is for. Create/Update methods
            return INVALID_ARGUMENT if the length is greater than 512.
          type: string
        updateTime:
          description: Output only. The time when the policy was updated.
          format: google-datetime
          readOnly: true
          type: string
        weeklyMaintenanceWindow:
          description: "Required. Maintenance window that is applied to resources\
            \ covered by this policy. Minimum 1. For the current version, the maximum\
            \ number of weekly_maintenance_windows is expected to be one."
          items:
            $ref: "#/components/schemas/WeeklyMaintenanceWindow"
          type: array
      type: object
    GoogleCloudMemcacheV1beta2OperationMetadata:
      description: Represents the metadata of a long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        cancelRequested:
          description: "Output only. Identifies whether the user has requested cancellation\
            \ of the operation. Operations that have successfully been cancelled have\
            \ Operation.error value with a google.rpc.Status.code of 1, corresponding\
            \ to `Code.CANCELLED`."
          readOnly: true
          type: boolean
        createTime:
          description: Output only. Time when the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. Time when the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        statusDetail:
          description: "Output only. Human-readable status of the operation, if any."
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of
            the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    GoogleCloudMemcacheV1beta2UpgradeInstanceRequest:
      description: Request for UpgradeInstance.
      example:
        memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
      properties:
        memcacheVersion:
          description: Required. Specifies the target version of memcached engine
            to upgrade to.
          enum:
          - MEMCACHE_VERSION_UNSPECIFIED
          - MEMCACHE_1_5
          - MEMCACHE_1_6_15
          type: string
      type: object
    GoogleCloudMemcacheV1beta2ZoneMetadata:
      properties: {}
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1Instance:
      description: "Instance represents the interface for SLM services to actuate\
        \ the state of control plane resources. Example Instance in JSON, where consumer-project-number=123456,\
        \ producer-project-id=cloud-sql: ```json Instance: { \"name\": \"projects/123456/locations/us-east1/instances/prod-instance\"\
        , \"create_time\": { \"seconds\": 1526406431, }, \"labels\": { \"env\": \"\
        prod\", \"foo\": \"bar\" }, \"state\": READY, \"software_versions\": { \"\
        software_update\": \"cloud-sql-09-28-2018\", }, \"maintenance_policy_names\"\
        : { \"UpdatePolicy\": \"projects/123456/locations/us-east1/maintenancePolicies/prod-update-policy\"\
        , } \"tenant_project_id\": \"cloud-sql-test-tenant\", \"producer_metadata\"\
        : { \"cloud-sql-tier\": \"basic\", \"cloud-sql-instance-size\": \"1G\", },\
        \ \"provisioned_resources\": [ { \"resource-type\": \"compute-instance\",\
        \ \"resource-url\": \"https://www.googleapis.com/compute/v1/projects/cloud-sql/zones/us-east1-b/instances/vm-1\"\
        , } ], \"maintenance_schedules\": { \"csa_rollout\": { \"start_time\": { \"\
        seconds\": 1526406431, }, \"end_time\": { \"seconds\": 1535406431, }, }, \"\
        ncsa_rollout\": { \"start_time\": { \"seconds\": 1526406431, }, \"end_time\"\
        : { \"seconds\": 1535406431, }, } }, \"consumer_defined_name\": \"my-sql-instance1\"\
        , } ``` LINT.IfChange"
      properties:
        consumerDefinedName:
          description: consumer_defined_name is the name of the instance set by the
            service consumers. Generally this is different from the `name` field which
            reperesents the system-assigned id of the instance which the service consumers
            do not recognize. This is a required field for tenants onboarding to Maintenance
            Window notifications (go/slm-rollout-maintenance-policies#prerequisites).
          type: string
        createTime:
          description: Output only. Timestamp when the resource was created.
          format: google-datetime
          readOnly: true
          type: string
        instanceType:
          description: "Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}.\
            \ Instance Type represents a high-level tier or SKU of the service that\
            \ this instance belong to. When enabled(eg: Maintenance Rollout), Rollout\
            \ uses 'instance_type' along with 'software_versions' to determine whether\
            \ instance needs an update or not."
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Optional. Resource labels to represent user provided metadata.\
            \ Each label is a key-value pair, where both the key and the value are\
            \ arbitrary strings provided by the user."
          type: object
        maintenancePolicyNames:
          additionalProperties:
            type: string
          description: "Optional. The MaintenancePolicies that have been attached\
            \ to the instance. The key must be of the type name of the oneof policy\
            \ name defined in MaintenancePolicy, and the referenced policy must define\
            \ the same policy type. For details, please refer to go/mr-user-guide.\
            \ Should not be set if maintenance_settings.maintenance_policies is set."
          type: object
        maintenanceSchedules:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule"
          description: The MaintenanceSchedule contains the scheduling information
            of published maintenance schedule with same key as software_versions.
          type: object
        maintenanceSettings:
          $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings"
        name:
          description: "Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}`\
            \ Note: This name is passed, stored and logged across the rollout system.\
            \ So use of consumer project_id or any other consumer PII in the name\
            \ is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance\
            \ for more details."
          type: string
        notificationParameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter"
          description: Optional. notification_parameter are information that service
            producers may like to include that is not relevant to Rollout. This parameter
            will only be passed to Gamma and Cloud Logging for notification/logging
            purpose.
          type: object
        producerMetadata:
          additionalProperties:
            type: string
          description: Output only. Custom string attributes used primarily to expose
            producer-specific information in monitoring dashboards. See go/get-instance-metadata.
          readOnly: true
          type: object
        provisionedResources:
          description: "Output only. The list of data plane resources provisioned\
            \ for this instance, e.g. compute VMs. See go/get-instance-metadata."
          items:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource"
          readOnly: true
          type: array
        slmInstanceTemplate:
          description: Link to the SLM instance template. Only populated when updating
            SLM instances via SSA's Actuation service adaptor. Service producers with
            custom control plane (e.g. Cloud SQL) doesn't need to populate this field.
            Instead they should use software_versions.
          type: string
        sloMetadata:
          $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata"
        softwareVersions:
          additionalProperties:
            type: string
          description: Software versions that are used to deploy this instance. This
            can be mutated by rollout services.
          type: object
        state:
          description: Output only. Current lifecycle state of the resource (e.g.
            if it's being created or ready to use).
          enum:
          - STATE_UNSPECIFIED
          - CREATING
          - READY
          - UPDATING
          - REPAIRING
          - DELETING
          - ERROR
          readOnly: true
          type: string
        tenantProjectId:
          description: Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when the resource was last modified.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule:
      description: "Maintenance schedule which is exposed to customer and potentially\
        \ end user, indicating published upcoming future maintenance schedule"
      properties:
        canReschedule:
          deprecated: true
          description: "This field is deprecated, and will be always set to true since\
            \ reschedule can happen multiple times now. This field should not be removed\
            \ until all service producers remove this for their customers."
          type: boolean
        endTime:
          description: The scheduled end time for the maintenance.
          format: google-datetime
          type: string
        rolloutManagementPolicy:
          description: "The rollout management policy this maintenance schedule is\
            \ associated with. When doing reschedule update request, the reschedule\
            \ should be against this given policy."
          type: string
        scheduleDeadlineTime:
          description: "schedule_deadline_time is the time deadline any schedule start\
            \ time cannot go beyond, including reschedule. It's normally the initial\
            \ schedule start time plus maintenance window length (1 day or 1 week).\
            \ Maintenance cannot be scheduled to start beyond this deadline."
          format: google-datetime
          type: string
        startTime:
          description: The scheduled start time for the maintenance.
          format: google-datetime
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings:
      description: Maintenance settings associated with instance. Allows service producers
        and end users to assign settings that controls maintenance on this instance.
      properties:
        exclude:
          description: "Optional. Exclude instance from maintenance. When true, rollout\
            \ service will not attempt maintenance on the instance. Rollout service\
            \ will include the instance in reported rollout progress as not attempted."
          type: boolean
        isRollback:
          description: "Optional. If the update call is triggered from rollback, set\
            \ the value as true."
          type: boolean
        maintenancePolicies:
          additionalProperties:
            $ref: "#/components/schemas/MaintenancePolicy"
          description: "Optional. The MaintenancePolicies that have been attached\
            \ to the instance. The key must be of the type name of the oneof policy\
            \ name defined in MaintenancePolicy, and the embedded policy must define\
            \ the same policy type. For details, please refer to go/mr-user-guide.\
            \ Should not be set if maintenance_policy_names is set. If only the name\
            \ is needed, then only populate MaintenancePolicy.name."
          type: object
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata:
      description: "Node information for custom per-node SLO implementations. SSA\
        \ does not support per-node SLO, but producers can populate per-node information\
        \ in SloMetadata for custom precomputations. SSA Eligibility Exporter will\
        \ emit per-node metric based on this information."
      properties:
        location:
          description: "The location of the node, if different from instance location."
          type: string
        nodeId:
          description: The id of the node. This should be equal to SaasInstanceNode.node_id.
          type: string
        perSliEligibility:
          $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility"
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter:
      description: Contains notification related data.
      properties:
        values:
          description: Optional. Array of string values. e.g. instance's replica information.
          items:
            type: string
          type: array
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility:
      description: PerSliSloEligibility is a mapping from an SLI name to eligibility.
      properties:
        eligibilities:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility"
          description: "An entry in the eligibilities map specifies an eligibility\
            \ for a particular SLI for the given instance. The SLI key in the name\
            \ must be a valid SLI name specified in the Eligibility Exporter binary\
            \ flags otherwise an error will be emitted by Eligibility Exporter and\
            \ the oncaller will be alerted. If an SLI has been defined in the binary\
            \ flags but the eligibilities map does not contain it, the corresponding\
            \ SLI time series will not be emitted by the Eligibility Exporter. This\
            \ ensures a smooth rollout and compatibility between the data produced\
            \ by different versions of the Eligibility Exporters. If eligibilities\
            \ map contains a key for an SLI which has not been declared in the binary\
            \ flags, there will be an error message emitted in the Eligibility Exporter\
            \ log and the metric for the SLI in question will not be emitted."
          type: object
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource:
      description: Describes provisioned dataplane resources.
      properties:
        resourceType:
          description: "Type of the resource. This can be either a GCP resource or\
            \ a custom one (e.g. another cloud provider's VM). For GCP compute resources\
            \ use singular form of the names listed in GCP compute API documentation\
            \ (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed\
            \ with 'compute-', for example: 'compute-instance', 'compute-disk', 'compute-autoscaler'."
          type: string
        resourceUrl:
          description: "URL identifying the resource, e.g. \"https://www.googleapis.com/compute/v1/projects/...)\"\
            ."
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility:
      description: "SloEligibility is a tuple containing eligibility value: true if\
        \ an instance is eligible for SLO calculation or false if it should be excluded\
        \ from all SLO-related calculations along with a user-defined reason."
      properties:
        eligible:
          description: Whether an instance is eligible or ineligible.
          type: boolean
        reason:
          description: "User-defined reason for the current value of instance eligibility.\
            \ Usually, this can be directly mapped to the internal state. An empty\
            \ reason is allowed."
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata:
      description: SloMetadata contains resources required for proper SLO classification
        of the instance.
      properties:
        nodes:
          description: "Optional. List of nodes. Some producers need to use per-node\
            \ metadata to calculate SLO. This field allows such producers to publish\
            \ per-node SLO meta data, which will be consumed by SSA Eligibility Exporter\
            \ and published in the form of per node metric to Monarch."
          items:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata"
          type: array
        perSliEligibility:
          $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility"
        tier:
          description: Name of the SLO tier the Instance belongs to. This name will
            be expected to match the tiers specified in the service SLO configuration.
            Field is mandatory and must not be empty.
          type: string
      type: object
    Instance:
      description: A Memorystore for Memcached instance
      example:
        memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
        authorizedNetwork: authorizedNetwork
        displayName: displayName
        instanceMessages:
        - code: CODE_UNSPECIFIED
          message: message
        - code: CODE_UNSPECIFIED
          message: message
        memcacheFullVersion: memcacheFullVersion
        updateTime: updateTime
        maintenanceSchedule:
          startTime: startTime
          endTime: endTime
          scheduleDeadlineTime: scheduleDeadlineTime
        zones:
        - zones
        - zones
        memcacheNodes:
        - memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
          port: 5
          zone: zone
          host: host
          memcacheFullVersion: memcacheFullVersion
          state: STATE_UNSPECIFIED
          updateAvailable: true
          nodeId: nodeId
          parameters:
            id: id
            params:
              key: params
        - memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
          port: 5
          zone: zone
          host: host
          memcacheFullVersion: memcacheFullVersion
          state: STATE_UNSPECIFIED
          updateAvailable: true
          nodeId: nodeId
          parameters:
            id: id
            params:
              key: params
        nodeConfig:
          memorySizeMb: 7
          cpuCount: 2
        labels:
          key: labels
        maintenancePolicy:
          createTime: createTime
          description: description
          weeklyMaintenanceWindow:
          - duration: duration
            startTime:
              hours: 0
              seconds: 5
              nanos: 1
              minutes: 6
            day: DAY_OF_WEEK_UNSPECIFIED
          - duration: duration
            startTime:
              hours: 0
              seconds: 5
              nanos: 1
              minutes: 6
            day: DAY_OF_WEEK_UNSPECIFIED
          updateTime: updateTime
        createTime: createTime
        name: name
        discoveryEndpoint: discoveryEndpoint
        nodeCount: 9
        reservedIpRangeId:
        - reservedIpRangeId
        - reservedIpRangeId
        state: STATE_UNSPECIFIED
        updateAvailable: true
        parameters:
          id: id
          params:
            key: params
      properties:
        authorizedNetwork:
          description: "The full name of the Google Compute Engine [network](https://cloud.google.com/vpc/docs/vpc)\
            \ to which the instance is connected. If left unspecified, the `default`\
            \ network will be used."
          type: string
        createTime:
          description: Output only. The time the instance was created.
          format: google-datetime
          readOnly: true
          type: string
        discoveryEndpoint:
          description: Output only. Endpoint for the Discovery API.
          readOnly: true
          type: string
        displayName:
          description: "User provided name for the instance, which is only used for\
            \ display purposes. Cannot be more than 80 characters."
          type: string
        instanceMessages:
          description: List of messages that describe the current state of the Memcached
            instance.
          items:
            $ref: "#/components/schemas/InstanceMessage"
          type: array
        labels:
          additionalProperties:
            type: string
          description: Resource labels to represent user-provided metadata. Refer
            to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          type: object
        maintenancePolicy:
          $ref: "#/components/schemas/GoogleCloudMemcacheV1beta2MaintenancePolicy"
        maintenanceSchedule:
          $ref: "#/components/schemas/MaintenanceSchedule"
        memcacheFullVersion:
          description: Output only. The full version of memcached server running on
            this instance. System automatically determines the full memcached version
            for an instance based on the input MemcacheVersion. The full version format
            will be "memcached-1.5.16".
          readOnly: true
          type: string
        memcacheNodes:
          description: Output only. List of Memcached nodes. Refer to Node message
            for more details.
          items:
            $ref: "#/components/schemas/Node"
          readOnly: true
          type: array
        memcacheVersion:
          description: "The major version of Memcached software. If not provided,\
            \ latest supported version will be used. Currently the latest supported\
            \ major version is `MEMCACHE_1_5`. The minor version will be automatically\
            \ determined by our system based on the latest supported minor version."
          enum:
          - MEMCACHE_VERSION_UNSPECIFIED
          - MEMCACHE_1_5
          - MEMCACHE_1_6_15
          type: string
        name:
          description: "Required. Unique name of the resource in this scope including\
            \ project and location using the form: `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\
            \ Note: Memcached instances are managed and addressed at the regional\
            \ level so `location_id` here refers to a Google Cloud region; however,\
            \ users may choose which zones Memcached nodes should be provisioned in\
            \ within an instance. Refer to zones field for more details."
          type: string
        nodeConfig:
          $ref: "#/components/schemas/NodeConfig"
        nodeCount:
          description: Required. Number of nodes in the Memcached instance.
          format: int32
          type: integer
        parameters:
          $ref: "#/components/schemas/MemcacheParameters"
        reservedIpRangeId:
          description: "Optional. Contains the id of allocated IP address ranges associated\
            \ with the private service access connection for example, \"test-default\"\
            \ associated with IP range 10.0.0.0/29."
          items:
            type: string
          type: array
        state:
          description: Output only. The state of this Memcached instance.
          enum:
          - STATE_UNSPECIFIED
          - CREATING
          - READY
          - UPDATING
          - DELETING
          - PERFORMING_MAINTENANCE
          - MEMCACHE_VERSION_UPGRADING
          readOnly: true
          type: string
        updateAvailable:
          description: Output only. Returns true if there is an update waiting to
            be applied
          readOnly: true
          type: boolean
        updateTime:
          description: Output only. The time the instance was updated.
          format: google-datetime
          readOnly: true
          type: string
        zones:
          description: "Zones in which Memcached nodes should be provisioned. Memcached\
            \ nodes will be equally distributed across these zones. If not provided,\
            \ the service will by default create nodes in all zones in the region\
            \ for the instance."
          items:
            type: string
          type: array
      type: object
    InstanceMessage:
      example:
        code: CODE_UNSPECIFIED
        message: message
      properties:
        code:
          description: A code that correspond to one type of user-facing message.
          enum:
          - CODE_UNSPECIFIED
          - ZONE_DISTRIBUTION_UNBALANCED
          type: string
        message:
          description: Message on memcached instance which will be exposed to users.
          type: string
      type: object
    ListInstancesResponse:
      description: Response for ListInstances.
      example:
        unreachable:
        - unreachable
        - unreachable
        nextPageToken: nextPageToken
        resources:
        - memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
          authorizedNetwork: authorizedNetwork
          displayName: displayName
          instanceMessages:
          - code: CODE_UNSPECIFIED
            message: message
          - code: CODE_UNSPECIFIED
            message: message
          memcacheFullVersion: memcacheFullVersion
          updateTime: updateTime
          maintenanceSchedule:
            startTime: startTime
            endTime: endTime
            scheduleDeadlineTime: scheduleDeadlineTime
          zones:
          - zones
          - zones
          memcacheNodes:
          - memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
            port: 5
            zone: zone
            host: host
            memcacheFullVersion: memcacheFullVersion
            state: STATE_UNSPECIFIED
            updateAvailable: true
            nodeId: nodeId
            parameters:
              id: id
              params:
                key: params
          - memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
            port: 5
            zone: zone
            host: host
            memcacheFullVersion: memcacheFullVersion
            state: STATE_UNSPECIFIED
            updateAvailable: true
            nodeId: nodeId
            parameters:
              id: id
              params:
                key: params
          nodeConfig:
            memorySizeMb: 7
            cpuCount: 2
          labels:
            key: labels
          maintenancePolicy:
            createTime: createTime
            description: description
            weeklyMaintenanceWindow:
            - duration: duration
              startTime:
                hours: 0
                seconds: 5
                nanos: 1
                minutes: 6
              day: DAY_OF_WEEK_UNSPECIFIED
            - duration: duration
              startTime:
                hours: 0
                seconds: 5
                nanos: 1
                minutes: 6
              day: DAY_OF_WEEK_UNSPECIFIED
            updateTime: updateTime
          createTime: createTime
          name: name
          discoveryEndpoint: discoveryEndpoint
          nodeCount: 9
          reservedIpRangeId:
          - reservedIpRangeId
          - reservedIpRangeId
          state: STATE_UNSPECIFIED
          updateAvailable: true
          parameters:
            id: id
            params:
              key: params
        - memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
          authorizedNetwork: authorizedNetwork
          displayName: displayName
          instanceMessages:
          - code: CODE_UNSPECIFIED
            message: message
          - code: CODE_UNSPECIFIED
            message: message
          memcacheFullVersion: memcacheFullVersion
          updateTime: updateTime
          maintenanceSchedule:
            startTime: startTime
            endTime: endTime
            scheduleDeadlineTime: scheduleDeadlineTime
          zones:
          - zones
          - zones
          memcacheNodes:
          - memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
            port: 5
            zone: zone
            host: host
            memcacheFullVersion: memcacheFullVersion
            state: STATE_UNSPECIFIED
            updateAvailable: true
            nodeId: nodeId
            parameters:
              id: id
              params:
                key: params
          - memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
            port: 5
            zone: zone
            host: host
            memcacheFullVersion: memcacheFullVersion
            state: STATE_UNSPECIFIED
            updateAvailable: true
            nodeId: nodeId
            parameters:
              id: id
              params:
                key: params
          nodeConfig:
            memorySizeMb: 7
            cpuCount: 2
          labels:
            key: labels
          maintenancePolicy:
            createTime: createTime
            description: description
            weeklyMaintenanceWindow:
            - duration: duration
              startTime:
                hours: 0
                seconds: 5
                nanos: 1
                minutes: 6
              day: DAY_OF_WEEK_UNSPECIFIED
            - duration: duration
              startTime:
                hours: 0
                seconds: 5
                nanos: 1
                minutes: 6
              day: DAY_OF_WEEK_UNSPECIFIED
            updateTime: updateTime
          createTime: createTime
          name: name
          discoveryEndpoint: discoveryEndpoint
          nodeCount: 9
          reservedIpRangeId:
          - reservedIpRangeId
          - reservedIpRangeId
          state: STATE_UNSPECIFIED
          updateAvailable: true
          parameters:
            id: id
            params:
              key: params
      properties:
        nextPageToken:
          description: "Token to retrieve the next page of results, or empty if there\
            \ are no more results in the list."
          type: string
        resources:
          description: "A list of Memcached instances in the project in the specified\
            \ location, or across all locations. If the `location_id` in the parent\
            \ field of the request is \"-\", all regions available to the project\
            \ are queried, and the results aggregated."
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      example:
        nextPageToken: nextPageToken
        locations:
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
        - metadata:
            key: ""
          displayName: displayName
          locationId: locationId
          name: name
          labels:
            key: labels
      properties:
        locations:
          description: A list of locations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      example:
        operations:
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      example:
        metadata:
          key: ""
        displayName: displayName
        locationId: locationId
        name: name
        labels:
          key: labels
      properties:
        displayName:
          description: "The friendly name for this location, typically a nearby city\
            \ name. For example, \"Tokyo\"."
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Cross-service attributes for the location. For example {\"\
            cloud.googleapis.com/region\": \"us-east1\"}"
          type: object
        locationId:
          description: "The canonical id for this location. For example: `\"us-east1\"\
            `."
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: Service-specific metadata. For example the available capacity
            at the given location.
          type: object
        name:
          description: "Resource name for the location, which may vary between implementations.\
            \ For example: `\"projects/example-project/locations/us-east1\"`"
          type: string
      type: object
    LocationMetadata:
      description: Metadata for the given google.cloud.location.Location.
      properties:
        availableZones:
          additionalProperties:
            $ref: "#/components/schemas/ZoneMetadata"
          description: "Output only. The set of available zones in the location. The\
            \ map is keyed by the lowercase ID of each zone, as defined by GCE. These\
            \ keys can be specified in the `zones` field when creating a Memcached\
            \ instance."
          readOnly: true
          type: object
      type: object
    MaintenancePolicy:
      description: LINT.IfChange Defines policies to service maintenance events.
      properties:
        createTime:
          description: Output only. The time when the resource was created.
          format: google-datetime
          type: string
        description:
          description: Optional. Description of what this policy is for. Create/Update
            methods return INVALID_ARGUMENT if the length is greater than 512.
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Optional. Resource labels to represent user provided metadata.\
            \ Each label is a key-value pair, where both the key and the value are\
            \ arbitrary strings provided by the user."
          type: object
        name:
          description: "Required. MaintenancePolicy name using the form: `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}`\
            \ where {project_id} refers to a GCP consumer project ID, {location_id}\
            \ refers to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters\
            \ long and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`."
          type: string
        state:
          description: Optional. The state of the policy.
          enum:
          - STATE_UNSPECIFIED
          - READY
          - DELETING
          type: string
        updatePolicy:
          $ref: "#/components/schemas/UpdatePolicy"
        updateTime:
          description: Output only. The time when the resource was updated.
          format: google-datetime
          type: string
      type: object
    MaintenanceSchedule:
      description: Upcoming maintenance schedule.
      example:
        startTime: startTime
        endTime: endTime
        scheduleDeadlineTime: scheduleDeadlineTime
      properties:
        endTime:
          description: Output only. The end time of any upcoming scheduled maintenance
            for this instance.
          format: google-datetime
          readOnly: true
          type: string
        scheduleDeadlineTime:
          description: "Output only. The deadline that the maintenance schedule start\
            \ time can not go beyond, including reschedule."
          format: google-datetime
          readOnly: true
          type: string
        startTime:
          description: Output only. The start time of any upcoming scheduled maintenance
            for this instance.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    MaintenanceWindow:
      description: MaintenanceWindow definition.
      properties:
        dailyCycle:
          $ref: "#/components/schemas/DailyCycle"
        weeklyCycle:
          $ref: "#/components/schemas/WeeklyCycle"
      type: object
    MemcacheParameters:
      example:
        id: id
        params:
          key: params
      properties:
        id:
          description: Output only. The unique ID associated with this set of parameters.
            Users can use this id to determine if the parameters associated with the
            instance differ from the parameters associated with the nodes. A discrepancy
            between parameter ids can inform users that they may need to take action
            to apply parameters on nodes.
          readOnly: true
          type: string
        params:
          additionalProperties:
            type: string
          description: User defined set of parameters to use in the memcached process.
          type: object
      type: object
    Node:
      example:
        memcacheVersion: MEMCACHE_VERSION_UNSPECIFIED
        port: 5
        zone: zone
        host: host
        memcacheFullVersion: memcacheFullVersion
        state: STATE_UNSPECIFIED
        updateAvailable: true
        nodeId: nodeId
        parameters:
          id: id
          params:
            key: params
      properties:
        host:
          description: Output only. Hostname or IP address of the Memcached node used
            by the clients to connect to the Memcached server on this node.
          readOnly: true
          type: string
        memcacheFullVersion:
          description: Output only. The full version of memcached server running on
            this node. e.g. - memcached-1.5.16
          readOnly: true
          type: string
        memcacheVersion:
          description: "Output only. Major version of memcached server running on\
            \ this node, e.g. MEMCACHE_1_5"
          enum:
          - MEMCACHE_VERSION_UNSPECIFIED
          - MEMCACHE_1_5
          - MEMCACHE_1_6_15
          readOnly: true
          type: string
        nodeId:
          description: Output only. Identifier of the Memcached node. The node id
            does not include project or location like the Memcached instance name.
          readOnly: true
          type: string
        parameters:
          $ref: "#/components/schemas/MemcacheParameters"
        port:
          description: Output only. The port number of the Memcached server on this
            node.
          format: int32
          readOnly: true
          type: integer
        state:
          description: Output only. Current state of the Memcached node.
          enum:
          - STATE_UNSPECIFIED
          - CREATING
          - READY
          - DELETING
          - UPDATING
          readOnly: true
          type: string
        updateAvailable:
          description: Output only. Returns true if there is an update waiting to
            be applied
          readOnly: true
          type: boolean
        zone:
          description: Output only. Location (GCP Zone) for the Memcached node.
          readOnly: true
          type: string
      type: object
    NodeConfig:
      description: Configuration for a Memcached Node.
      example:
        memorySizeMb: 7
        cpuCount: 2
      properties:
        cpuCount:
          description: Required. Number of cpus per Memcached node.
          format: int32
          type: integer
        memorySizeMb:
          description: Required. Memory size in MiB for each Memcached node.
          format: int32
          type: integer
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of a long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        cancelRequested:
          description: "Output only. Identifies whether the user has requested cancellation\
            \ of the operation. Operations that have successfully been cancelled have\
            \ Operation.error value with a google.rpc.Status.code of 1, corresponding\
            \ to `Code.CANCELLED`."
          readOnly: true
          type: boolean
        createTime:
          description: Output only. Time when the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. Time when the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        statusDetail:
          description: "Output only. Human-readable status of the operation, if any."
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of
            the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    RescheduleMaintenanceRequest:
      description: Request for RescheduleMaintenance.
      example:
        scheduleTime: scheduleTime
        rescheduleType: RESCHEDULE_TYPE_UNSPECIFIED
      properties:
        rescheduleType:
          description: "Required. If reschedule type is SPECIFIC_TIME, must set up\
            \ schedule_time as well."
          enum:
          - RESCHEDULE_TYPE_UNSPECIFIED
          - IMMEDIATE
          - NEXT_AVAILABLE_WINDOW
          - SPECIFIC_TIME
          type: string
        scheduleTime:
          description: "Timestamp when the maintenance shall be rescheduled to if\
            \ reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example `2012-11-15T16:19:00.094Z`."
          format: google-datetime
          type: string
      type: object
    Schedule:
      description: Configure the schedule.
      properties:
        day:
          description: Allows to define schedule that runs specified day of the week.
          enum:
          - DAY_OF_WEEK_UNSPECIFIED
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
          type: string
        duration:
          description: "Output only. Duration of the time window, set by service producer."
          format: google-duration
          type: string
        startTime:
          $ref: "#/components/schemas/TimeOfDay"
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          type: string
      type: object
    TimeOfDay:
      description: Represents a time of day. The date and time zone are either not
        significant or are specified elsewhere. An API may choose to allow leap seconds.
        Related types are google.type.Date and `google.protobuf.Timestamp`.
      example:
        hours: 0
        seconds: 5
        nanos: 1
        minutes: 6
      properties:
        hours:
          description: Hours of day in 24 hour format. Should be from 0 to 23. An
            API may choose to allow the value "24:00:00" for scenarios like business
            closing time.
          format: int32
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
          type: integer
        nanos:
          description: "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999."
          format: int32
          type: integer
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to
            59. An API may allow the value 60 if it allows leap-seconds.
          format: int32
          type: integer
      type: object
    UpdateParametersRequest:
      description: Request for UpdateParameters.
      example:
        updateMask: updateMask
        parameters:
          id: id
          params:
            key: params
      properties:
        parameters:
          $ref: "#/components/schemas/MemcacheParameters"
        updateMask:
          description: Required. Mask of fields to update.
          format: google-fieldmask
          type: string
      type: object
    UpdatePolicy:
      description: Maintenance policy applicable to instance updates.
      properties:
        channel:
          description: Optional. Relative scheduling channel applied to resource.
          enum:
          - UPDATE_CHANNEL_UNSPECIFIED
          - EARLIER
          - LATER
          - WEEK1
          - WEEK2
          - WEEK5
          type: string
        denyMaintenancePeriods:
          description: "Deny Maintenance Period that is applied to resource to indicate\
            \ when maintenance is forbidden. The protocol supports zero-to-many such\
            \ periods, but the current SLM Rollout implementation only supports zero-to-one."
          items:
            $ref: "#/components/schemas/DenyMaintenancePeriod"
          type: array
        window:
          $ref: "#/components/schemas/MaintenanceWindow"
      type: object
    WeeklyCycle:
      description: Time window specified for weekly operations.
      properties:
        schedule:
          description: User can specify multiple windows in a week. Minimum of 1 window.
          items:
            $ref: "#/components/schemas/Schedule"
          type: array
      type: object
    WeeklyMaintenanceWindow:
      description: Time window specified for weekly operations.
      example:
        duration: duration
        startTime:
          hours: 0
          seconds: 5
          nanos: 1
          minutes: 6
        day: DAY_OF_WEEK_UNSPECIFIED
      properties:
        day:
          description: Required. Allows to define schedule that runs specified day
            of the week.
          enum:
          - DAY_OF_WEEK_UNSPECIFIED
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
          type: string
        duration:
          description: Required. Duration of the time window.
          format: google-duration
          type: string
        startTime:
          $ref: "#/components/schemas/TimeOfDay"
      type: object
    ZoneMetadata:
      properties: {}
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

