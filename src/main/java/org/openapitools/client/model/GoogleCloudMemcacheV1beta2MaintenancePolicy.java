/*
 * Cloud Memorystore for Memcached API
 * Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.WeeklyMaintenanceWindow;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Maintenance policy per instance.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T15:33:03.624322+05:30[Asia/Kolkata]", comments = "Generator version: 7.15.0")
public class GoogleCloudMemcacheV1beta2MaintenancePolicy {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  @javax.annotation.Nullable
  private String createTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  @javax.annotation.Nullable
  private String updateTime;

  public static final String SERIALIZED_NAME_WEEKLY_MAINTENANCE_WINDOW = "weeklyMaintenanceWindow";
  @SerializedName(SERIALIZED_NAME_WEEKLY_MAINTENANCE_WINDOW)
  @javax.annotation.Nullable
  private List<WeeklyMaintenanceWindow> weeklyMaintenanceWindow = new ArrayList<>();

  public GoogleCloudMemcacheV1beta2MaintenancePolicy() {
  }

  public GoogleCloudMemcacheV1beta2MaintenancePolicy(
     String createTime, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.updateTime = updateTime;
  }

  /**
   * Output only. The time when the policy was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudMemcacheV1beta2MaintenancePolicy description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  /**
   * Output only. The time when the policy was updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  public GoogleCloudMemcacheV1beta2MaintenancePolicy weeklyMaintenanceWindow(@javax.annotation.Nullable List<WeeklyMaintenanceWindow> weeklyMaintenanceWindow) {
    this.weeklyMaintenanceWindow = weeklyMaintenanceWindow;
    return this;
  }

  public GoogleCloudMemcacheV1beta2MaintenancePolicy addWeeklyMaintenanceWindowItem(WeeklyMaintenanceWindow weeklyMaintenanceWindowItem) {
    if (this.weeklyMaintenanceWindow == null) {
      this.weeklyMaintenanceWindow = new ArrayList<>();
    }
    this.weeklyMaintenanceWindow.add(weeklyMaintenanceWindowItem);
    return this;
  }

  /**
   * Required. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_maintenance_windows is expected to be one.
   * @return weeklyMaintenanceWindow
   */
  @javax.annotation.Nullable
  public List<WeeklyMaintenanceWindow> getWeeklyMaintenanceWindow() {
    return weeklyMaintenanceWindow;
  }

  public void setWeeklyMaintenanceWindow(@javax.annotation.Nullable List<WeeklyMaintenanceWindow> weeklyMaintenanceWindow) {
    this.weeklyMaintenanceWindow = weeklyMaintenanceWindow;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudMemcacheV1beta2MaintenancePolicy googleCloudMemcacheV1beta2MaintenancePolicy = (GoogleCloudMemcacheV1beta2MaintenancePolicy) o;
    return Objects.equals(this.createTime, googleCloudMemcacheV1beta2MaintenancePolicy.createTime) &&
        Objects.equals(this.description, googleCloudMemcacheV1beta2MaintenancePolicy.description) &&
        Objects.equals(this.updateTime, googleCloudMemcacheV1beta2MaintenancePolicy.updateTime) &&
        Objects.equals(this.weeklyMaintenanceWindow, googleCloudMemcacheV1beta2MaintenancePolicy.weeklyMaintenanceWindow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, description, updateTime, weeklyMaintenanceWindow);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudMemcacheV1beta2MaintenancePolicy {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    weeklyMaintenanceWindow: ").append(toIndentedString(weeklyMaintenanceWindow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("createTime", "description", "updateTime", "weeklyMaintenanceWindow"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudMemcacheV1beta2MaintenancePolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudMemcacheV1beta2MaintenancePolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudMemcacheV1beta2MaintenancePolicy is not found in the empty JSON string", GoogleCloudMemcacheV1beta2MaintenancePolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudMemcacheV1beta2MaintenancePolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudMemcacheV1beta2MaintenancePolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      if (jsonObj.get("weeklyMaintenanceWindow") != null && !jsonObj.get("weeklyMaintenanceWindow").isJsonNull()) {
        JsonArray jsonArrayweeklyMaintenanceWindow = jsonObj.getAsJsonArray("weeklyMaintenanceWindow");
        if (jsonArrayweeklyMaintenanceWindow != null) {
          // ensure the json data is an array
          if (!jsonObj.get("weeklyMaintenanceWindow").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `weeklyMaintenanceWindow` to be an array in the JSON string but got `%s`", jsonObj.get("weeklyMaintenanceWindow").toString()));
          }

          // validate the optional field `weeklyMaintenanceWindow` (array)
          for (int i = 0; i < jsonArrayweeklyMaintenanceWindow.size(); i++) {
            WeeklyMaintenanceWindow.validateJsonElement(jsonArrayweeklyMaintenanceWindow.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudMemcacheV1beta2MaintenancePolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudMemcacheV1beta2MaintenancePolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudMemcacheV1beta2MaintenancePolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudMemcacheV1beta2MaintenancePolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudMemcacheV1beta2MaintenancePolicy>() {
           @Override
           public void write(JsonWriter out, GoogleCloudMemcacheV1beta2MaintenancePolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudMemcacheV1beta2MaintenancePolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudMemcacheV1beta2MaintenancePolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudMemcacheV1beta2MaintenancePolicy
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudMemcacheV1beta2MaintenancePolicy
   */
  public static GoogleCloudMemcacheV1beta2MaintenancePolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudMemcacheV1beta2MaintenancePolicy.class);
  }

  /**
   * Convert an instance of GoogleCloudMemcacheV1beta2MaintenancePolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

